/** Declaration file generated by dts-gen */

export class AsService {
    constructor(loader: any, mapper?: any, autoload?: any, paramcount?: any, forceSourceLoad?: any);

    ErrorObservable(...args: any[]): any;

    Observable(...args: any[]): any;

    forceLoad(...args: any[]): any;

    get(...args: any[]): any;

    getLoader(): any;

    getMapper(...args: any[]): any;

    getState(...args: any[]): any;

    getSub(...args: any[]): any;

    load(...args: any[]): any;

    map(mapper: any, forceLoadSource: any): any;

    publish(...args: any[]): void;

    publishAll(): void;

    refresh(...args: any[]): any;

}

export function Server(): void;

export namespace Server {
    const axiosInstance: any;

    const requestCount: number;

    const timeOut: number;

    function addRequest(hash: any, canceller: any): void;

    function afterRecieve(): void;

    function beforSend(): void;

    function checkuser(h: any): void;

    function controller(cont: any, meth: any, params: any, options: any): any;

    function dvm(name: any, params: any, options: any): any;

    function end(): void;

    function errorHandler(options: any, status: any): void;

    function errorHooks(e: any): void;

    function get(url: any, params: any, options: any): any;

    function getAxios(): any;

    function hook403(): void;

    function hookAll(): void;

    function hookLoginRequire(): void;

    function removeRequest(hash: any): void;

    function start(): void;

}

